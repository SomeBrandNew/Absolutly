
To get
1. Доку на API


Приоритет всегда имеют positive проверки:
0. Проверить наименование enpoint (соответствует ли заявленному действию)
1. В API отправить валидные данные (в т.ч. граничные значения длины) по параметрам username, email, password:
    - проверить корректность полученного кода состояния HTTP и возвращаемого тела сообщения (JSON, имен, типов и
    значений полей ответа)
    - проверить заголовки ответа
    - проверить успешность создания пользователя в БД, сверив отправленные при создании параметры, вернувшиеся ответы
после создания и обращения к базе данных
    - проверить отправку данных в шифрованном виде (Charles Proxy)
2. После отправки GET запроса проверить:
    - данные в базе не изменилась
    - получение всех пользаков
    - получение конкретного пользака по конкретному параметру get?username=[Danyka , Presley] (в т.ч. username, email,
    password, created at, updated at)
    - проверить получение пароля в шифрованном виде (хотя по идее он даже и возвращаться не должен)
3. Проверить время ответа на запрос
4. После отправки неупешного запроса (н-р, при попытке создать клиента с существующим username и/или
 email, или невалидными полями и т.д.) проверить, что в базе не создался клиент
5. Проверить соответствует ли RestFull архитектуре
6. Проверить реакцию API на невалидные параметры запроса (в целях сокращения кол-ва кейсов использовать https://pairwise.yuuniworks.com)
    - username/email, имеющихся у зарегистрированных пользователей
    - значение null в параметрах
    - пустое значение
    - пробелы в параметры (только пробелы, пробелы в начале и конце параметра)
    - кириллица
    - эмоджи
    - не ASCII символы
    - с превышением максимально допустимых длин параметров
    - с количеством символов меньше допустимых длин параметров
    - пароль не соответствующий требованиям (они должны быть, такие как мин. длина, цифры, uppercase и проч)
    - не валидный email (к нему особые требования: обязательность "@", недопустимость пробелов, обязательность имени пользователя и доменной части, требования к доменной части ())
7. Проверить корректность полученного кода состояния HTTP и возвращаемого тела сообщения в ответах на ошибочные запросы:
    - не 200-е коды
    - коды соответствуют спецификации
    - сообщение соответствует ошибке
8. В полях username/email отправить SQL-injection и скрипты
9. Можно еще сравнить валидации на UI с API (если ui есть). Нужна их непротиворечивость
